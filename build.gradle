plugins {
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'io.swagger.core.v3.swagger-gradle-plugin' version '2.2.32'
}
ext {
    springCloudVersion = "2025.0.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    cucumberRuntime {
        extendsFrom testImplementation
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Database
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'

    // Utils
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.32'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

    // Resilience
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.integration:spring-integration-test'
    testImplementation 'org.spockframework:spock-spring:2.4-M6-groovy-4.0'
    testImplementation 'io.cucumber:cucumber-java:7.23.0'
    testImplementation 'org.testcontainers:spock:1.21.1'
    testImplementation 'org.testcontainers:postgresql:1.21.1'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

tasks.register('cucumber') {
    dependsOn assemble, testClasses
    doLast {
        providers.javaexec {
            mainClass.set("io.cucumber.core.cli.Main")
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--glue', 'com.example.banking.cucumber',
                    'src/test/resources/features'
            ]
        }
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'com/example/banking/config/**',
                    'com/example/banking/Application*'
            ])
        }))
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

configurations.configureEach {
    resolutionStrategy {
        force "org.apache.commons:commons-compress:1.26.0"
    }
}

